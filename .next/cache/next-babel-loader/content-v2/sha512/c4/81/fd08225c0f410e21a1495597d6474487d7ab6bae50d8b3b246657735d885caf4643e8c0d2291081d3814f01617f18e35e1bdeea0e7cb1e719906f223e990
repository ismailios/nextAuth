{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\nextAuth\\\\components\\\\auth\\\\auth-form.js\";\nimport { useState, useRef } from \"react\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\n\nconst createUser = async (email, password) => {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong\");\n  }\n\n  return data;\n};\n\nfunction AuthForm() {\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const router = useRouter();\n  const emailInput = useRef();\n  const passwordInput = useRef();\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  const submitHandler = async event => {\n    //Values of inputs\n    const emailValue = emailInput.current.value;\n    const passwordValue = passwordInput.current.value; //\n\n    event.preventDefault(); //\n\n    if (isLogin) {\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: emailValue,\n        password: passwordValue\n      });\n\n      if (!result.error) {\n        router.replace(\"/profile\");\n      } //console.log(result);\n\n    } else {\n      try {\n        const result = await createUser(emailValue, passwordValue);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["C:/Users/HP/Desktop/nextAuth/components/auth/auth-form.js"],"names":["useState","useRef","classes","signIn","useRouter","createUser","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","AuthForm","isLogin","setIsLogin","router","emailInput","passwordInput","switchAuthModeHandler","prevState","submitHandler","event","emailValue","current","value","passwordValue","preventDefault","result","redirect","error","replace","console","log","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\r\nimport classes from \"./auth-form.module.css\";\r\nimport { signIn } from \"next-auth/client\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst createUser = async (email, password) => {\r\n  const response = await fetch(\"/api/auth/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      password: password,\r\n    }),\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Something went wrong\");\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nfunction AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const router = useRouter();\r\n\r\n  const emailInput = useRef();\r\n  const passwordInput = useRef();\r\n\r\n  function switchAuthModeHandler() {\r\n    setIsLogin((prevState) => !prevState);\r\n  }\r\n\r\n  const submitHandler = async (event) => {\r\n    //Values of inputs\r\n    const emailValue = emailInput.current.value;\r\n    const passwordValue = passwordInput.current.value;\r\n\r\n    //\r\n    event.preventDefault();\r\n\r\n    //\r\n    if (isLogin) {\r\n      const result = await signIn(\"credentials\", {\r\n        redirect: false,\r\n        email: emailValue,\r\n        password: passwordValue,\r\n      });\r\n\r\n      if (!result.error) {\r\n        router.replace(\"/profile\");\r\n      }\r\n\r\n      //console.log(result);\r\n    } else {\r\n      try {\r\n        const result = await createUser(emailValue, passwordValue);\r\n        console.log(result);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" required ref={emailInput} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input type=\"password\" id=\"password\" ref={passwordInput} required />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}