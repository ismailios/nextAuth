{"ast":null,"code":"import NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\nimport { verifyPassword } from \"../../../lib/auth\";\nimport { connectToDB } from \"../../../lib/db\";\nexport default NextAuth({\n  session: {\n    jwt: true\n  },\n  providers: [Providers.Credentials({\n    async authorize(credentials) {\n      const client = await connectToDB();\n      console.log(\"yesy here\" + credentials);\n      const usersCollectons = await client.db().collection(\"users\");\n      const user = await usersCollectons.findOne({\n        email: credentials.email\n      });\n\n      if (!user) {\n        throw new Error(\"User not found !!\");\n        client.close();\n      }\n\n      const isValid = await verifyPassword(credentials.password, user.password);\n\n      if (!isValid) {\n        throw new Error(\"Could not log you !!\");\n        client.close();\n      }\n\n      client.close();\n      return {\n        email: user.email\n      };\n    }\n\n  })]\n});","map":{"version":3,"sources":["/Users/user/Downloads/nextjs-course-code-12-auth-extra-files/starting-project/pages/api/auth/[...nextauth].js"],"names":["NextAuth","Providers","verifyPassword","connectToDB","session","jwt","providers","Credentials","authorize","credentials","client","console","log","usersCollectons","db","collection","user","findOne","email","Error","close","isValid","password"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,eAAeH,QAAQ,CAAC;AACtBI,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE,GADa;AAItBC,EAAAA,SAAS,EAAE,CACTL,SAAS,CAACM,WAAV,CAAsB;AACpB,UAAMC,SAAN,CAAgBC,WAAhB,EAA6B;AAC3B,YAAMC,MAAM,GAAG,MAAMP,WAAW,EAAhC;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcH,WAA1B;AAEA,YAAMI,eAAe,GAAG,MAAMH,MAAM,CAACI,EAAP,GAAYC,UAAZ,CAAuB,OAAvB,CAA9B;AAEA,YAAMC,IAAI,GAAG,MAAMH,eAAe,CAACI,OAAhB,CAAwB;AACzCC,QAAAA,KAAK,EAAET,WAAW,CAACS;AADsB,OAAxB,CAAnB;;AAIA,UAAI,CAACF,IAAL,EAAW;AACT,cAAM,IAAIG,KAAJ,CAAU,mBAAV,CAAN;AACAT,QAAAA,MAAM,CAACU,KAAP;AACD;;AAED,YAAMC,OAAO,GAAG,MAAMnB,cAAc,CAClCO,WAAW,CAACa,QADsB,EAElCN,IAAI,CAACM,QAF6B,CAApC;;AAKA,UAAI,CAACD,OAAL,EAAc;AACZ,cAAM,IAAIF,KAAJ,CAAU,sBAAV,CAAN;AACAT,QAAAA,MAAM,CAACU,KAAP;AACD;;AAEDV,MAAAA,MAAM,CAACU,KAAP;AAEA,aAAO;AACLF,QAAAA,KAAK,EAAEF,IAAI,CAACE;AADP,OAAP;AAGD;;AAhCmB,GAAtB,CADS;AAJW,CAAD,CAAvB","sourcesContent":["import NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\nimport { verifyPassword } from \"../../../lib/auth\";\nimport { connectToDB } from \"../../../lib/db\";\n\nexport default NextAuth({\n  session: {\n    jwt: true,\n  },\n  providers: [\n    Providers.Credentials({\n      async authorize(credentials) {\n        const client = await connectToDB();\n\n        console.log(\"yesy here\" + credentials);\n\n        const usersCollectons = await client.db().collection(\"users\");\n\n        const user = await usersCollectons.findOne({\n          email: credentials.email,\n        });\n\n        if (!user) {\n          throw new Error(\"User not found !!\");\n          client.close();\n        }\n\n        const isValid = await verifyPassword(\n          credentials.password,\n          user.password\n        );\n\n        if (!isValid) {\n          throw new Error(\"Could not log you !!\");\n          client.close();\n        }\n\n        client.close();\n\n        return {\n          email: user.email,\n        };\n      },\n    }),\n  ],\n});\n"]},"metadata":{},"sourceType":"module"}