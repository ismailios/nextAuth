{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Downloads/nextjs-course-code-12-auth-extra-files/starting-project/components/auth/auth-form.js\";\nimport { useState, useRef } from \"react\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\n\nconst createUser = async (email, password) => {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong\");\n  }\n\n  return data;\n};\n\nfunction AuthForm() {\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const emailInput = useRef();\n  const passwordInput = useRef();\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  const submitHandler = async event => {\n    //Values of inputs\n    const emailValue = emailInput.current.value;\n    const passwordValue = passwordInput.current.value; //\n\n    event.preventDefault(); //\n\n    if (isLogin) {\n      console.log(emailValue);\n      console.log(passwordValue);\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: emailValue,\n        password: passwordValue\n      });\n      console.log(result);\n    } else {\n      try {\n        const result = await createUser(emailValue, passwordValue);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/Users/user/Downloads/nextjs-course-code-12-auth-extra-files/starting-project/components/auth/auth-form.js"],"names":["useState","useRef","classes","signIn","createUser","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","AuthForm","isLogin","setIsLogin","emailInput","passwordInput","switchAuthModeHandler","prevState","submitHandler","event","emailValue","current","value","passwordValue","preventDefault","console","log","result","redirect","error","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\n\nconst createUser = async (email, password) => {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong\");\n  }\n\n  return data;\n};\n\nfunction AuthForm() {\n  const [isLogin, setIsLogin] = useState(true);\n\n  const emailInput = useRef();\n  const passwordInput = useRef();\n\n  function switchAuthModeHandler() {\n    setIsLogin((prevState) => !prevState);\n  }\n\n  const submitHandler = async (event) => {\n    //Values of inputs\n    const emailValue = emailInput.current.value;\n    const passwordValue = passwordInput.current.value;\n\n    //\n    event.preventDefault();\n\n    //\n    if (isLogin) {\n      console.log(emailValue);\n      console.log(passwordValue);\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: emailValue,\n        password: passwordValue,\n      });\n\n      console.log(result);\n    } else {\n      try {\n        const result = await createUser(emailValue, passwordValue);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInput} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" ref={passwordInput} required />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}