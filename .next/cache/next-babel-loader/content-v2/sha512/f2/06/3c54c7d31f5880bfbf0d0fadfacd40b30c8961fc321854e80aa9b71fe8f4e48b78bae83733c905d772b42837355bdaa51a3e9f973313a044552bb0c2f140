{"ast":null,"code":"import { connectToDB } from \"../../../lib/db\";\nimport { hachPassword } from \"../../../lib/auth\";\n\nconst handler = async (req, res) => {\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body;\n      return console.log(data);\n      const {\n        email,\n        password\n      } = data;\n      return console.log(\" dd\" + password);\n\n      if (!email || !email.includes(\"@\") || !password || password.trim().length < 7) {\n        res.status(420).json({\n          message: \"Inputs  not valid\"\n        });\n        return;\n      }\n\n      const client = await connectToDB();\n      const db = client.db();\n      const hachedPassword = await hachPassword(password);\n      const result = await db.collection(\"users\").insertOne({\n        email: email,\n        password: hachedPassword\n      });\n      res.status(201).json({\n        message: \"User Created Successefully !!\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\nexport default handler;","map":{"version":3,"sources":["/Users/user/Downloads/nextjs-course-code-12-auth-extra-files/starting-project/pages/api/auth/signup.js"],"names":["connectToDB","hachPassword","handler","req","res","method","data","body","console","log","email","password","includes","trim","length","status","json","message","client","db","hachedPassword","result","collection","insertOne","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACF,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,aAAOC,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAAP;AAEA,YAAM;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsBL,IAA5B;AACA,aAAOE,OAAO,CAACC,GAAR,CAAY,QAAQE,QAApB,CAAP;;AAEA,UACE,CAACD,KAAD,IACA,CAACA,KAAK,CAACE,QAAN,CAAe,GAAf,CADD,IAEA,CAACD,QAFD,IAGAA,QAAQ,CAACE,IAAT,GAAgBC,MAAhB,GAAyB,CAJ3B,EAKE;AACAV,QAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,UAAAA,OAAO,EAAE;AADU,SAArB;AAGA;AACD;;AAED,YAAMC,MAAM,GAAG,MAAMlB,WAAW,EAAhC;AACA,YAAMmB,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,YAAMC,cAAc,GAAG,MAAMnB,YAAY,CAACU,QAAD,CAAzC;AAEA,YAAMU,MAAM,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,SAAvB,CAAiC;AACpDb,QAAAA,KAAK,EAAEA,KAD6C;AAEpDC,QAAAA,QAAQ,EAAES;AAF0C,OAAjC,CAArB;AAKAhB,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD,KAhCD,CAgCE,OAAOO,KAAP,EAAc;AACdhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACD;AACF;AACF,CAtCD;;AAwCA,eAAetB,OAAf","sourcesContent":["import { connectToDB } from \"../../../lib/db\";\nimport { hachPassword } from \"../../../lib/auth\";\n\nconst handler = async (req, res) => {\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body;\n      return console.log(data);\n\n      const { email, password } = data;\n      return console.log(\" dd\" + password);\n\n      if (\n        !email ||\n        !email.includes(\"@\") ||\n        !password ||\n        password.trim().length < 7\n      ) {\n        res.status(420).json({\n          message: \"Inputs  not valid\",\n        });\n        return;\n      }\n\n      const client = await connectToDB();\n      const db = client.db();\n\n      const hachedPassword = await hachPassword(password);\n\n      const result = await db.collection(\"users\").insertOne({\n        email: email,\n        password: hachedPassword,\n      });\n\n      res.status(201).json({\n        message: \"User Created Successefully !!\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}